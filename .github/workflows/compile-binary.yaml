name: Release

on:
  push:
    tags:
      - '*'
  pull_request:


jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        run: |
          docker run \
            --rm \
            -e CGO_ENABLED=1 -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} -e VERSION=${{ env.VERSION }} \
            -e RASABOT_GITHUB_TOKEN=${{ secret.RASABOT_GITHUB_TOKEN }} \
            -v `pwd`:/go/src/rasactl \
            -w /go/src/rasactl \
            troian/golang-cross:v1.16.7 \
            --rm-dist --skip-validate --skip-publish

#      - uses: 'actions/upload-artifact@v2'
#        with:
#          name: ${{ matrix.id }}
#          path: ${{ github.workspace }}/dist
#
#  release:
#    name: Release
#    runs-on: ubuntu-latest
#    needs: [build]
#    outputs:
#      upload_url: ${{ steps.create_release.outputs.upload_url }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: Get release version
#        id: release_version
#        run: |
#          echo "::set-output name=version::${GITHUB_REF#refs/tags/}"
#
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ steps.release_version.outputs.version }}
#          release_name: ${{ steps.release_version.outputs.version }}
#          body: ""
#          draft: false
#          prerelease: false

#  upload:
#    name: Upload Assets
#    runs-on: ubuntu-latest
#    needs: [release]
#    strategy:
#      matrix:
#        include:
#          - os: darwin
#            arch: amd64
#          - os: darwin
#            arch: arm64
#          - os: linux
#            arch: amd64
#
#    steps:
#      - uses: actions/download-artifact@v2
#        with:
#          name: ${{ matrix.os }}
#          path: ${{ github.workspace }}/dist
#
#      - name: Get the version
#        id: get_version
#        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
#
#      - run: sha256sum ./dist/${{ matrix.os }}_${{ matrix.os }}_${{ matrix.arch }}/rasactl > rasactl_${{ matrix.os }}_${{ matrix.arch }}.sha256sum
#
#      - name: Prepare tar.gz
#        run: tar -C dist/${{ matrix.os }}_${{ matrix.os }}_${{ matrix.arch }} -czf rasactl_${{ env.VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz rasactl
#
#      - run: sha256sum rasactl_${{ env.VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz > rasactl_${{ env.VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz.sha256sum
#
#      - name: Upload Release Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.release.outputs.upload_url }}
#          asset_path: rasactl_${{ env.VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz
#          asset_name: rasactl_${{ env.VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz
#          asset_content_type: application/tar+gzip
#
#      - name: Upload Release Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.release.outputs.upload_url }}
#          asset_path: rasactl_${{ matrix.os }}_${{ matrix.arch }}.sha256sum
#          asset_name: rasactl_${{ matrix.os }}_${{ matrix.arch }}.sha256sum
#          asset_content_type: application/text
#
#      - name: Upload Release Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.release.outputs.upload_url }}
#          asset_path: rasactl_${{ env.VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz.sha256sum
#          asset_name: rasactl_${{ env.VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz.sha256sum
#          asset_content_type: application/text
