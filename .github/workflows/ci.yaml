name: Continuous Integration

on:
  pull_request:
    types: [opened, synchronize, labeled]


concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

env:
  GO_VERSION: 1.17.2

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run tests
        run: make test

  build:
    runs-on: ubuntu-latest
    needs: [golangci, unit-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: |
          docker run \
            --rm \
            -e CGO_ENABLED=1 -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} -e VERSION=${{ env.VERSION }} \
            -e RASABOT_GITHUB_TOKEN=${{ secrets.RASABOT_GITHUB_TOKEN }} \
            -v `pwd`:/go/src/rasactl \
            -w /go/src/rasactl \
            ghcr.io/tczekajlo/golang-cross:v${{ env.GO_VERSION }} \
            build --snapshot

  deploy-rasax:
    name: Deploy Rasa X via rasactl
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        k8s:
          - v1.21.1
          - v1.22.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate kind config
        run: bash kind/generate-config.sh > kind/config.yaml

      - name: Create kind ${{ matrix.k8s }} cluster
        uses: helm/kind-action@2a525709fd0874b75d7ae842d257981b0e0f557d # v1.2.0
        with:
          node_image: kindest/node:${{ matrix.k8s }}
          config: ./kind/config.yaml

      - name: Deploy ingress-nginx
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/kind/deploy.yaml
          kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: make build

      - name: Deploy
        run: ./dist/rasactl start --project --debug

      - name: Check health endpoint
        run: |
          export URL=$(./dist/rasactl status -o json | jq -r .url)
          curl $URL/api/health | jq .
